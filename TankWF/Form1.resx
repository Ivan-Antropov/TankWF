<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAQAAEABAAoAQAANgAAABAQAAABAAgAaAUAAF4BAAAgIAAAAQAgAKgQAADGBgAAKAAAABAA
        AAAgAAAAAQAEAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAACHeAAAAAAAcAiACAAAAIgAhxgA
        iAAAgAh3d4AIAAcAhnx4iAB3AAd8h4h4eHCAd8h8iIhXCHhXdniHdngHl3d4e3d3gAeHfIe3d8AACHd3
        t4N3AAAAB3d7eLAAAIAIV7e5gAAIAACDV3gAAIgAAACIAAAHAAAAAAB3eAAAAPw/AAD2bwAAzDMAANgb
        AACwDAAA4AEAAEACAAAAAgAAAAYAAAAeAAAAPwAAgH0AAIB7AADA8wAA8+8AAPw/AAAoAAAAEAAAACAA
        AAABAAgAAAAAAAABAAAAAAAAAAAAAAABAAAAAQAAAAAAAHtURwB+Y14AaVR2AH9/fACIUUcAjFFHAJdV
        RwCcVEYAoFtKAJRkWgCXaV4AqWFPAKtrWQCoa18Arm5cALBoVQCycF0AlmhvAJxudACOcHAAgnl6AKdx
        YACzdWMAvHJgALl0YgC8dWQAvHlpAKFvdwCmcHQAqXpwAK5/dAClcHgAwHZlAMJ4ZwDFemkApIF6AGZZ
        jgB8YYIAaGObAFtmsgBiecgAYX/TAGJ/1ACGZ4cAgGeMAIdqiwCEa40AnHqAAIZ+ogA+n7MAVY+bAFGW
        nwB6jZQAY5OeAGaVnwBemqgASJ+wAF+hrgBDpLcASKa6AEuqvwBMqb0AUKOyAFyrvwBPncMAaIHPAHCC
        ygB9jM0AYJrJAGKA1QBqh9YAbIjYAHiR2gB4k9wATq3CAFykxgBRrMAAV67EAFivxABYsMUAXLHGAFqy
        yABfssgAXrTLAGmwwwCWkY4Am5OOALCMgQCznJcAlaCcAJGCpwCfj68AiZG/AJuWvQCQpaEAlbO1AKym
        pACjsrAAqba1ALK/vQDDk4cAxpqQAMWinADGuLYAhp3eAI6j3wCPpN8AqqXFALy9wgCjr9kAobDcAIee
        4ACPpOAAxLbBAMe+wQC8yMYAv8vJAMjQzgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAEpGRkoAAAAAAAAAAAAASAAAb24A
        AEgAAAAAAABwcQAAcwMmZgAAcWkAAAAAcQAAaAkgHCNhAABxAAAASAAAWQwiGg9YY20AACkwAAAAJBAi
        GhpldGJkVmcxAEoACxohGhofdWN2WgUPAEpGXSwgGhEEN2BfVwcSXAArKy0uEw84VFAzAQgbcgAAK0Mg
        GhY3PVBUAhUfAAAAAEpbLhc0TU1PQApVAAAAAAAAACgFOTxQPVNLAAAAAABHAABeJTUyO1BBTAAAAABr
        AAAAAEQnFDo/RQAAAABraQAAAAAAAEJsAAAAAABHAAAAAAAAAAAAAEorRkoAAAAAAAD8PwAA9m8AAMwz
        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
        YP+9d2b/xXZk/7qGePnCxsL7vc3M/7rJx/+/zcr/yc7N/8rQzv+swL3/g52b/pN+ePl9PzP+czgu/5VY
        StgAAAAANVvHbTZdysw4X8x7OWDNoDhey8w2XMg/wLy7jXxCNP+jWUb/wnlp/8R5aP/AdmX/wnhn/7t2
        Y/+2dGL/v3po/7hxXf+XX1H7npyb/M7b2v+ywb7/kqWi/5Wjof+/yMX/0NvZ/7PDwfxuXlb5ezUq/ZNN
        QP+3bV3/w31rzseCcAQ1W8Y/Nl3JzDhey6A5YMy8OF7KzImf2zqGamPxuGpX/8J5aP/Cd2b/xHho/8F3
        Z/+3c2H/uXZj/8J3Zf+mYEr+h3Fj92h3ePhxhYX6s7+6/b3Jxv+arKr/cYB8/6K2s/+yubb7kmhd+YtB
        M/2iXE3/xXpp/8h+bf/Og3NdAAAAADRbxiA2XMjMOF7LvDlfzMw3XsrMRWbG50VYrP9RX7H/Tl2v/05d
        rv/CeGf/tHJf/7t2Y/+8cV3/lGNR+2t7ffhcqr77XbDF/VajtfdUk572jrCy+5Wvqv+hubT+jo6J+YdO
        QvqWRjj+qF5P/6luW/9JXK39P1q34jJXws00WcPMNFvGzDZcyMw4XsvMOV/MzDthy9FKX7b6TV2w/1Bf
        sf9OXa//TVyt/7JyX/+8dmX/uGxX/3l4c/pcorL7WrfQ/1y0y/9bssn/VrDI/1Cyy/5KjZf5aHhu+4Vk
        Wfp+PzP8k0k6/7hwYP+/emn/vndn7ThYudoxVr/MMVfCzDNZw8w0WsbMNlzIzDhey8w5X8y8QmHD3qBl
        Y//Hemn/xHho/7t1ZP+ycl7/wHlo/7xwW/9/WUn6Tput+1Cyyv9hssj/YbPJ/1+yyP9SrML/VKq//lpN
        SPVyNyj6hzYn/6dYSf+5c2L/uXZk/795aObBemlBAAAAAAAAAAAAAAAAAAAAADRaxiA2XMjMOF7LvDlg
        zKBHYL7mmGp4/8V5aP+4dGH/snJe/8F5aP+0a1X+gmFS+VqZqftOrcP/TKm+/2Kzyf9gs8n/XrLI/1Oy
        yP9Ul6f8ijgo/ZZFNv+DeXn4nXBn+8FzYv++eWjbtnZkNwAAAAAAAAAAAAAAAAAAAAAAAAAANFvGPzZc
        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
</value>
  </data>
</root>